{
  "swagger": "2.0",
  "info": {
    "title": "Sistema de Agendamento",
    "description": "Este projeto faz parte do sistema de agendamento desenvolvido durante o hackathon do Programa de Formação do Grupo FCamara.",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": [
    {
      "url": "http://localhost:5000",
      "description": "development server"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operações relativas ao usuário"
    },
    {
      "name": "appointment",
      "description": "Referente aos agendamentos"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/register": {
      "post": {
        "tags": ["user"],
        "summary": "Cria usuário",
        "description": "Cadastra usuário no banco de dados.",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": ["user"],
        "summary": "Loga usuário no sistema.",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user /email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "tags": ["user"],
        "summary": "Usuário sai do sistema",
        "description": "",
        "operationId": "logoutUser",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": ["user"],
        "summary": "Exibe página do usuário com agendamentos.",
        "description": "This can only be done by the logged in user.",
        "operationId": "findUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name/email that needs to be fetched. Use user1 for testing.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Atualiza usuário",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Remove usuário",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/agendamento": {
      "post": {
        "tags": ["appointment"],
        "summary": "Cria agendamento",
        "description": "Registra no banco de dados o agendamento feito pelo usuário",
        "operationId": "makeAppointment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Agendamento a ser adicionado no banco de dados",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["appointment"],
        "summary": "Visualiza agendamentos.",
        "description": "Visualiza todos os agendamentos feitos pelo usuário.",
        "operationId": "listAllAppointments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointment",
            "in": "path",
            "description": "The appointment that needs to be fetched.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/agendamento/{agendamentoId}": {
      "get": {
        "tags": ["appointment"],
        "summary": "Localiza agendamento por ID",
        "description": "Retorna o agendamento selecionado",
        "operationId": "listOneAppointment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "ID do agendamento para retornar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "tags": ["appointment"],
        "summary": "Remove um agendamento",
        "description": "",
        "operationId": "cancelAppointment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "appointmentId",
            "in": "path",
            "description": "Id do agendamento a ser removido",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "Appointment": {
      "type": "object",
      "required": ["city", "userId", "date"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    }
  }
}
