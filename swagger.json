{
  "swagger": "2.0",
  "info": {
    "description": "Este projeto faz parte do sistema de agendamento desenvolvido durante o hackathon da seleção do Programa de Formação do Grupo FCamara.",
    "version": "1.0.0",
    "title": "Sistema de Agendamento",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "agendamento",
      "description": "Referente aos agendamentos"
    },
    {
      "name": "user",
      "description": "Operações relativas ao usuário"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/agendamento": {
      "post": {
        "tags": ["agendamento"],
        "summary": "Cria agendamento",
        "description": "Registra no banco de dados o agendamento feito pelo usuário",
        "operationId": "criaAgendamento",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Agendamento a ser adicionado no banco de dados",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agendamento"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": ["agendamento"],
        "summary": "Atualiza um agendamento",
        "description": "",
        "operationId": "atualizaAgendamento",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Agendamento a ser adicionado no banco de dados",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agendamento"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Agendamento não encontrado"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/agendamento/findByStatus": {
      "get": {
        "tags": ["agendamento"],
        "summary": "Encontra agendamentos por status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findEventsByStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["atuais/próximos", "expirados/anteriores"],
              "default": "atuais/próximos"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Agendamento"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/agendamento/{agendamentoId}": {
      "get": {
        "tags": ["agendamento"],
        "summary": "Localiza agendamento por ID",
        "description": "Retorna o agendamento selecionado",
        "operationId": "getEventById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "agendamentoId",
            "in": "path",
            "description": "ID do agendamento para retornar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Agendamento"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "post": {
        "tags": ["agendamento"],
        "summary": "Atualiza um agendamento with form data",
        "description": "",
        "operationId": "updatePetWithForm",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "agendamentoId",
            "in": "path",
            "description": "ID do agendamento a ser modificado",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Atualiza agendamento",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the pet",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["agendamento"],
        "summary": "Remove um agendamento",
        "description": "",
        "operationId": "deletaAgendamento",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "agendamentoId",
            "in": "path",
            "description": "Id do agendamento a ser removido",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": ["user"],
        "summary": "Cria usuário",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": ["user"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["user"],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": ["user"],
        "summary": "Exibe página do usuário",
        "description": "",
        "operationId": "getUserByName",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Atualiza usuário",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Remove usuário",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Agendamento": {
      "type": "object",
      "required": ["unidade", "data", "mesa"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "unidade": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "mesa": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "status do agendamento",
          "enum": ["atuais/próximos", "expirados/anteriores"]
        }
      }
    }
  }
}
